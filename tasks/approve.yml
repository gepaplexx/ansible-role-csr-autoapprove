---
- name: Get total number of current nodes
  environment:
    CONFIG: "{{ openshift_kubeconfig_file }}"
  ansible.builtin.shell:
    cmd: |
      kubectl get nodes --no-headers --kubeconfig ${CONFIG} | wc -l
  register: csr_autoapprove_current_nodes
  changed_when: false

- name: Create async csr approvial job
  environment:
    KUBECONFIG: "{{ openshift_kubeconfig_file }}"
    WANTED_NODES: "{{ ocp_worker_count + ocp_infra_count + ocp_master_count }}"
    CURRENT_NODES: "{{ csr_autoapprove_current_nodes.stdout }}"
  ansible.builtin.shell:
    cmd: |
      NODES_ACCEPTED=0
      NODES_COUNT=$(($WANTED_NODES - $CURRENT_NODES))

      # do this until all nodes are added
      while [ "${NODES_ACCEPTED}" -lt \
      $(( ${NODES_COUNT} * 2 )) ]; do
        PENDING=""
        PENDING_COUNT=0

        # wait for at least one node to be pending
        while [ "${PENDING_COUNT}" -le 0 ]; do
          echo "wait for pending csr"
          PENDING=$(oc get csr | grep -i pending | cut -f 1 -d ' ')
          PENDING_COUNT=$(echo "$PENDING" | wc -w)
          sleep 10
        done

        # accept pending nodes, increase nodes_accepted counter
        echo "accepting ${PENDING_COUNT} csr"
        echo "${PENDING}" | xargs -n 1 oc adm certificate approve
        NODES_ACCEPTED=$((NODES_ACCEPTED + PENDING_COUNT))
        echo "accepted ${NODES_ACCEPTED} requests so far"
      done

  async: 600
  poll: 0
  register: csr_autoapprove_pending_csrs
  changed_when: true

- name: Wait for pending csr requests
  ansible.builtin.async_status:
    jid: "{{ csr_autoapprove_pending_csrs.ansible_job_id }}"
  register: csr_autoapprove_pending_csrs_status
  until: csr_autoapprove_pending_csrs_status.finished
  delay: 30
  retries: 20
...
